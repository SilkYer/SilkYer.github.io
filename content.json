{"meta":{"title":"SilkYer's Blog","subtitle":"Write the code , Change the world","description":null,"author":"SilkYer","url":"https://silkyer.github.io"},"pages":[],"posts":[{"title":"Vue2.0仿外卖APP（一）","slug":"web-app01","date":"2017-05-15T15:19:24.724Z","updated":"2017-05-15T15:38:03.857Z","comments":true,"path":"2017/05/15/web-app01/","link":"","permalink":"https://silkyer.github.io/2017/05/15/web-app01/","excerpt":"","text":"最近在学习慕课网的课程：用vue.js做一个仿饿了么外卖APP的项目，现在也把流程啊什么的暂时先整理一下在这个博客上面。 当然，这个过程会有点长，不过确实能学到很多东西。 话不多说，马上开始吧。 注：当我们把用vue-cli脚手架搭建成的vue项目复制到其他地方时，要把node_modules目录删除，不然在其他地方无法执行cnpm run dev，这其中设计到路径的问题。删除之后要重新cnpm install。 https://segmentfault.com/q/1010000006912664 https://www.zhihu.com/question/41409670?sort=created 1.项目介绍选用当前最火的MVVM框架作为这个项目的技术栈MVVM架构： View和model通过viewModel来通信，但数据发生变化，viewmodel能够观察到这种数据的变化，然后通知到对应的视图做自动更新；当用户操作view视图，viewModel也能监听到视图的变化，然后通知数据做改动，实现了数据的双向绑定。 应用场景： 针对具有复杂交互逻辑的前端应用； 它可以提供基础的架构抽象； 可以通过AJAX数据持久化，保证前端用户体验 好处： 当前端和数据做一些操作的时候，可以通过AJAX请求对后端做数据持久化，不需要刷新整个页面，只需要改动DOM里需要改动的那部分数据。特别是移动端应用场景，刷新页面太昂贵，会重新加载很多资源，虽然有些会被缓存，但是页面的DOM,JS,CSS都会被页面重新解析一遍，因此移动端页面通常会做出SPA单页应用。 该项目只提取饿了么其中一个模块–商家模块进行开发 项目开发的一个完整流程项目的需求分析–脚手架工具–数据mock–架构设计–代码编写–自测–编译打包等方面完全简讲述开发一个web的全流程，更好地了解一个项目从0到1的过程。 所需技术：项目完整的开发流程；组件化、模块化的开发模式；使用Vue-cli脚手架初始化Vue.js项目；webpack的打包原理；模拟json后端数据，前后端分离开发；es6+eslint的开发方式。 第三方组件：使用stylus编写模块化的CSS；使用vue-router开发单页应用；使用vue-resource与后端数据交互；在Vue.js框架里和第三方JS插件交互。 关于Vue的数据驱动思想在数据驱动的思想里，数据驱动DOM变化，DOM是数据的一种自然映射。 如果没有MVVM框架，数据和视图是如何交互的？ 比如通过AJAX从后端获取数据，会让视图改变，通过手动触发DOM的改变；再比如我们通过前端交互改变一些数据，为了让视图也发生变化，仍然需要通过手动触发进行DOM改变。手动改变DOM不仅繁琐，还容易出错。用了vue之后就可以省去操作DOM变化的步骤了。 在vue.js中，可以通过directives指令去对DOM做一层封装，当数据发生变化，会通知指令去修改对应的DOM。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-05-13T06:07:47.892Z","updated":"2017-05-13T06:07:47.925Z","comments":true,"path":"2017/05/13/hello-world/","link":"","permalink":"https://silkyer.github.io/2017/05/13/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}